"use client";import{useEffect as u,useReducer as w}from"react";function p(){let i={height:window.innerHeight,width:window.innerWidth},[n,t]=w(()=>({height:window.innerHeight,width:window.innerWidth}),i);return u(()=>(t(),window.addEventListener("resize",()=>t()),()=>window.removeEventListener("resize",()=>t())),[]),n}var h={"2xl":1536,xl:1280,lg:1024,md:760,sm:640};function f(i=h){let n=Object.entries(i),[t,r]=w(e=>{let s=window.innerWidth,d=n.reduce((o,[c,l])=>(s>=l&&o.push(c),o),[]);return e?.length==d.length?e:d},null);return u(()=>{r();let e=()=>r();return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[]),t}function m(i){let n=Object.entries(i).sort((e,s)=>parseInt(s[0])-parseInt(e[0])),[t,r]=w(e=>{let s=window.innerWidth;for(let[d,o]of n)if(s>=parseInt(d))return e&&e===o?e:o;return n[n.length-1][1]},null);return u(()=>{r();let e=()=>r();return window.addEventListener("resize",e),window.removeEventListener("resize",e)},[]),t}export{m as useBreakPoints,p as useDimension,f as useResponsive};
