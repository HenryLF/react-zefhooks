"use client";import{useRef as a}from"react";function l(n){if(n)return n()}function E(n){let c=a(null),o=a(null),r=n.swipeThreshold??50,i=typeof r=="number"?{vertical:r,horizontal:r}:r;return{onTouchStart:t=>{o.current=t.targetTouches[0],c.current=t.targetTouches[0]},onTouchMove:t=>o.current=t.targetTouches[0],onTouchEnd:()=>{if(!c.current||!o.current)return;let t=c.current.clientX-o.current.clientX,u=c.current.clientY-o.current.clientY;t>i.horizontal&&l(n.onSwipeLeft),t<-i.horizontal&&l(n.onSwipeRight),u>i.vertical&&l(n.onSwipeUp),u<-i.vertical&&l(n.onSwipeDown)}}}function y(n=console.log){let c=a(null),o=a(null),r=a(performance.now());return{onTouchStart:e=>{o.current=e.targetTouches[0],c.current=e.targetTouches[0],r.current=performance.now()},onTouchMove:e=>o.current=e.targetTouches[0],onTouchEnd:()=>{if(!c.current||!o.current)return;let{clientX:e,clientY:t}=c.current,{clientX:u,clientY:h}=o.current,s=Math.hypot(u-e,h-t),p=performance.now()-r.current,S=s/p,w={touchStart:{x:e,y:t},touchEnd:{x:u,y:h},delta:{x:u-e,y:h-t},velocity:S,duration:p,distance:s,angle:Math.atan2(h-t,u-e)};n(w)}}}export{E as useSwipeDirection,y as useSwipeMotion};
